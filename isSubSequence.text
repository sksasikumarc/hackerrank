
import java.util.*;

public class CandidateCode {

/**
In the Martian land faraway, a new virus has evolved and is attacking the individuals at a fast pace. The scientists have figured out the virus composition, V. The big task is to identify the people who are infected. The sample of N people is taken to check if they are POSITIVE or NEGATIVE. A report is generated which provides the current blood composition B of the person.

POSITIVE or NEGATIVE?
If the blood composition of the person is a subsequence of the virus composition V, then the person is identified as POSITIVE otherwise NEGATIVE.

Example:

Virus Composition, V = coronavirus
Blood Composition of the person , B = ravus

The person in question is POSITIVE as B is the subsequence of the V.
The scientists are busy with their research for medicine and request you to build a program which can quickly figure out if the person is POSITIVE or NEGATIVE. They will provide you with the virus composition V and all the peopleâ€™s current blood composition. Can you help them?
Note: The virus and blood compositions are lowercase alphabet strings.

Input Format:

The first line of the input consists of the virus composition, V
The second line of the input consists of the number of people, N
Next, N lines each consist of the blood composition of the ith person, Bi

Constraints
1<= N <=10
1<= |B|<= |V|<= 10^5

Output Format
For each person, print POSITIVE or NEGATIVE in a separate line

Sample TestCase 1
Input:
coronavirus
3
abcde
crnas
onarous

Output:
NEGATIVE
POSITIVE
NEGATIVE

 */

	static boolean isSubSequence1(String str1, String str2) {
		int m = str1.length();
		int n = str2.length();

		int j = 0; // Index of str1
		int i = 0; // Index of str2

//		    # Traverse both str1 and str2
//		    # Compare the current character of str2 with
//		    # first unmatched character of str1
//		    # If matched, then move ahead in str1

		while (j < m && i < n) {
			if (str1.charAt(j) == str2.charAt(i))
				j = j + 1;
			i = i + 1;

		}
//		    # If all characters of str1 matched,
//		    # then j is equal to m
		return j == m;

	}

	
	
	static boolean dar(String str1, String str2) {
		System.out.println(str1 +" "+str2);
		int m = str1.length();
		int n = str2.length();
		
		System.out.println(m +" "+n);
		int i,j;
		
		for(i=0,j=0; i<m && j<n;) {
			if(str1.charAt(i) == str2.charAt(j))
				i++;
			j++;
		}
		
		
		return i==m;
	}
	
	
	
	public static void main(String[] args) {

		Scanner obj = new Scanner(System.in);
		String str1 = obj.nextLine();

		String[] strData = new String[obj.nextInt()];
		obj.nextLine();
		for (int i = 0; i < strData.length; i++) {
			strData[i] = obj.nextLine();
		}

		for (String str : strData) {

			int m = str1.length();
			int n = str.length();

//		        System.out.println(isSubSequence(str,str1,n,m) ? "POSITIVE" : "NEGATIVE");
			System.out.println(dar(str, str1) ? "POSITIVE" : "NEGATIVE");
		}

	}

}
